name: Docs (main Branch)

# Build the documentation whenever there are new commits on main
on:
  push:
    branches:
      - dev
    # Alternative: only build for tags.
    # tags:
    #   - '*'

# Security: Restrict permissions for CI jobs.
permissions:
  contents: read

jobs:
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    environment: google-cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Export all repo vars safely
        shell: bash
        run: |
          VARS_JSON='${{ toJson(vars) }}'
          echo "$VARS_JSON" | jq -r 'to_entries | .[] | @base64' | while read entry; do
            _jq() { echo "$entry" | base64 --decode | jq -r "$1"; }
            key=$(_jq '.key')
            value=$(_jq '.value')
            # Safely write to GITHUB_ENV
            printf "%s=%s\n" "$key" "$value" >> "$GITHUB_ENV"
          done

      - name: Export all secrets safely
        shell: bash
        run: |
          SECRETS_JSON='${{ toJson(secrets) }}'
          echo "$SECRETS_JSON" | jq -r 'to_entries | .[] | @base64' | while read entry; do
            _jq() { echo "$entry" | base64 --decode | jq -r "$1"; }
            key=$(_jq '.key')
            value=$(_jq '.value')
            # Safely write to GITHUB_ENV
            printf "%s=%s\n" "$key" "$value" >> "$GITHUB_ENV"
          done
      
      - name: Check environment
        run: env | sort

      # Install all dependencies (including pdoc)
      # Build the documentation into docs/.
      # We use a custom build script for pdoc itself, ideally you just run `pdoc -o docs/ ...` here.
      - run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync --all-groups
          uv run pdoc -o docs/ turtle_quant_1/

      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4