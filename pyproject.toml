[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "turtle-quant-1"
version = "0.0.0"
description = "All hail the turt."
authors = [
    { name = "Julian Wong", email = "julianwong2000@gmail.com" }
]
requires-python = ">= 3.12"
dependencies = [
    "alpha-vantage>=3.0.0",
    "fastapi[standard]>=0.116.1",
    "google-cloud-run>=0.10.17",
    "google-cloud-storage>=3.2.0",
    "holidays>=0.77",
    "numpy>=2.3.2",
    "pandas>=2.3.1",
    "pyarrow>=18.0.0",
    "pydantic>=2.11.7",
    "python-dotenv>=1.0.1",
    "python-semantic-release>=10.3.1",
    "scikit-learn>=1.3.0",
    "setuptools>=80.9.0",
    "uvicorn>=0.35.0",
    "yfinance>=0.2.65",
]

[dependency-groups]
backtest = [
    "optuna>=4.4.0",
    "quantstats>=0.0.68",
]
dev = [
    "pandas-stubs>=2.3.0.250703",
    "pre-commit>=4.2.0",
    "pyrefly>=0.26.0",
    "pytest>=7.2.0",
    "ruff>=0.11.1",
    "snakeviz>=2.2.2",
    "tuna>=0.5.11",
    "uv-sort==0.6.0",
]
notebook = [
    "ipykernel>=6.30.0",
    "ipython>=9.4.0",
    "jupyterlab>=4.4.5",
    "matplotlib>=3.10.3",
    "nbconvert>=7.16.6",
    "notebook>=7.4.4",
    "plotly>=6.2.0",
    "seaborn>=0.13.2",
    "voila>=0.5.8",
]

[tool.ruff]
line-length = 88
indent-width = 4
exclude = [
    "build",
    "dist",
    "__pycache__",
    "*.ipynb"
]
fix = true

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

task-tags = ["HACK", "TODO"]

[tool.pydocstyle]
convention = "google"
add-ignore = "D104,D418"

[tool.pyrefly]
# Set the directory Pyrefly will search for files to type check
project-includes = ["turtle_quant_1/*"]
project-excludes = ["**/*venv/**/*"]

# Manually set the `sys.platform` Pyrefly will assume when type checking
python-platform = "linux"

# Return an import error when `<library>-stubs` can be imported, but no non-stubs version of that library can be found
ignore-missing-source = false

# A table mapping error codes to an `is-enabled` boolean
[tool.pyrefly.errors]
# Disable `bad-assignment` errors
bad-assignment = false
# Disable `bad-return` errors
bad-return = false

[tool.semantic_release]
# Where to update the version
version_toml = [
  "pyproject.toml:project.version"
]
version_variables = [
  "setup.py:version=\"(?P<version>\\d+\\.\\d+\\.\\d+)\""
]
# Use Conventional Commits for deciding bumps
commit_parser = "conventional"
